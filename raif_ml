# -*- coding: utf-8 -*-
"""RAIF ML.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WjUW0HPGCmLiAwFydThbl-lC9emd4pXy
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np
from scipy.stats import norm
from sklearn.preprocessing import StandardScaler
from scipy import stats
import warnings
warnings.filterwarnings('ignore')
# %matplotlib inline

data = pd.read_csv("/content/train.csv")

"""
home  -> 2
away  -> 1
draw  -> 0
"""
team = []

for i in range(len(data)):
  if data['full_time_away_goals'][i] < data['full_time_home_goals'][i]:
    team.append('2')
  if data['full_time_away_goals'][i] > data['full_time_home_goals'][i]:
    team.append('1')
  if data['full_time_away_goals'][i] == data['full_time_home_goals'][i]:
    team.append('0')

data['team'] = pd.DataFrame(team)

col2drop = ['Unnamed: 0', 'Division', 'Time', 'home_team', 'away_team',
       'full_time_home_goals', 'full_time_away_goals', 'half_time_home_goals',
       'half_time_away_goals', 'Referee', 'home_shots', 'away_shots',
       'home_shots_on_target', 'away_shots_on_target', 'home_fouls',
       'away_fouls', 'home_corners', 'away_corners', 'home_yellow_cards',
       'away_yellow_cards', 'home_red_cards', 'away_red_cards']

data.drop(col2drop, axis = 1, inplace = True)

from sklearn.ensemble import RandomForestClassifier
RF = RandomForestClassifier()
RF.fit(X_train, y_train)

def main(home_coef, draw_coef, away_coef):
  Division, Time, home_team, away_team, Referee, home_coef, draw_coef, away_coef = input().split()

  lst = [home_coef, draw_coef, away_coef]
  eval = np.array(lst).reshape(1, 3)
  team_win = RF.predict(eval)

  if team_win == '2':
    print('HOME', flush = True)
  elif team_win == '1':
    print('AWAY', flush = True)
  else:
    print('DRAW', flush = True)